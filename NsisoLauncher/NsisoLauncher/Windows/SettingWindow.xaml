<Controls:MetroWindow x:Class="NsisoLauncher.Windows.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:userControl="clr-namespace:NsisoLauncher.Controls"
        xmlns:util="clr-namespace:NsisoLauncher.Utils"
        xmlns:local="clr-namespace:NsisoLauncher.Windows"
        mc:Ignorable="d"
        Title="{DynamicResource String.Settingwindow.Title}" Height="450" Width="800" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize">
    <Controls:MetroWindow.Resources>
        <util:BoolToOppositeBoolConverter x:Key="BoolToOppositeBoolConverter"/>
        <util:SettingDirRadioButtonConverter x:Key="SettingDirRadioButtonConverter" />
        <util:SettingDownloadRadioButtonConverter x:Key="SettingDownloadRadioButtonConverter" />
        <util:SettingLoginTypeRadioButtonConverter x:Key="SettingLoginTypeRadioButtonConverter"/>
        <util:SettingCGRadioButtonConverter x:Key="SettingCGRadioButtonConverter"/>
        <util:StringToIntConverter x:Key="StringToIntConverter" />
    </Controls:MetroWindow.Resources>
    <Grid>
        <Grid.Resources>
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
        </Grid.Resources>
        <TabControl x:Name="tabControl" Margin="0,0,0,50">
            <TabItem Header="{DynamicResource String.Settingwindow.Env}">
                <ScrollViewer>
                    <StackPanel Margin="10,0">
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Java}" Margin="0,0,0,5">
                            <StackPanel>
                                <Controls:ToggleSwitch
                                x:Name="isAutoJavaToggle"
                                OnLabel="{DynamicResource String.Settingwindow.Env.Java.AutoOn}"
                                OffLabel="{DynamicResource String.Settingwindow.Env.Java.AutoOff}"
                                Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                IsChecked="{Binding Path=Environment.AutoJava}"
                                />
                                <Label Content="{DynamicResource String.Settingwindow.Env.Java.Path}" Margin="0,10,0,0"/>
                                <ComboBox x:Name="javaPathComboBox"
                                      IsEditable="True"
                                      IsReadOnly="True"
                                      IsEnabled="{Binding IsChecked, Converter={StaticResource BoolToOppositeBoolConverter}, ElementName=isAutoJavaToggle}"
                                      DisplayMemberPath="Path"
                                      Text="{Binding Environment.JavaPath}" SelectionChanged="javaPathComboBox_SelectionChanged"
                                      />
                                <Label x:Name="javaInfoLabel" IsEnabled="{Binding IsChecked, Converter={StaticResource BoolToOppositeBoolConverter}, ElementName=isAutoJavaToggle}"/>
                                <Button x:Name="chooseJavaButton" Content="{DynamicResource String.Settingwindow.Env.Java.Select}" Margin="0,5,0,0"
                                    IsEnabled="{Binding IsChecked, Converter={StaticResource BoolToOppositeBoolConverter}, ElementName=isAutoJavaToggle}" Click="chooseJavaButton_Click"
                                    />
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Root}" Margin="0,0,0,5">
                            <StackPanel>
                                <Controls:ToggleSwitch
                                OnLabel="{DynamicResource String.Settingwindow.Env.Root.VersionIsolationOn}"
                                OffLabel="{DynamicResource String.Settingwindow.Env.Root.VersionIsolationOff}"
                                Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                IsChecked="{Binding Environment.VersionIsolation}"
                                />

                                <Label Content="{DynamicResource String.Settingwindow.Env.Root.TypeTitle}" Margin="0,10,0,0"/>
                                <RadioButton Margin="0,0,0,5"
                                             Content="{DynamicResource String.Settingwindow.Env.Root.Root}" IsChecked="{Binding Path=Environment.GamePathType,
                                    Converter={StaticResource SettingDirRadioButtonConverter},ConverterParameter=0}"/>
                                <RadioButton Margin="0,0,0,5"
                                             Content="{DynamicResource String.Settingwindow.Env.Root.AppData}" 
                                             IsChecked="{Binding Path=Environment.GamePathType,
                                    Converter={StaticResource SettingDirRadioButtonConverter},ConverterParameter=1}"/>
                                <RadioButton Margin="0,0,0,5" 
                                             Content="{DynamicResource String.Settingwindow.Env.Root.Programe}"
                                             IsChecked="{Binding Path=Environment.GamePathType,
                                    Converter={StaticResource SettingDirRadioButtonConverter},ConverterParameter=2}"/>
                                <RadioButton x:Name="dir_customRadio" Margin="0,0,0,5" 
                                             Content="{DynamicResource String.Settingwindow.Env.Root.Custom}"
                                             IsChecked="{Binding Path=Environment.GamePathType,
                                    Converter={StaticResource SettingDirRadioButtonConverter},ConverterParameter=3}"/>
                                <TextBox x:Name="gamedirPathTextBox"  Margin="0,0,0,5"
                                         IsEnabled="{Binding IsChecked, ElementName=dir_customRadio}" Text="{Binding Path=Environment.GamePath}"/>
                                <Button x:Name="gamedirChooseButton"
                                        Content="{DynamicResource String.Settingwindow.Env.Root.Choose}" IsEnabled="{Binding IsChecked, ElementName=dir_customRadio}" Click="gamedirChooseButton_Click"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Memory}" Margin="0,0,0,5">
                            <Grid >
                                <Controls:ToggleSwitch 
                                    Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                    OnLabel="{DynamicResource String.Settingwindow.Env.Memory.AutoOn}"
                                    OffLabel="{DynamicResource String.Settingwindow.Env.Memory.AutoOff}"
                                    IsChecked="{Binding Path=Environment.AutoMemory}"
                                    VerticalAlignment="Top" />
                                <Controls:RangeSlider x:Name="memorySlider"
                                    IsSnapToTickEnabled="True"
                                    IsEnabled="{Binding Path=Environment.AutoMemory, Converter={StaticResource BoolToOppositeBoolConverter}}"
                                    UpperValue="{Binding ElementName=maxMemoryTextBox, Path=Text, Converter={StaticResource StringToIntConverter}}"
                                    LowerValue="{Binding ElementName=minMemoryTextBox, Path=Text, Converter={StaticResource StringToIntConverter}}"
                                    UpperValueChanged="memorySlider_UpperValueChanged"
                                    LowerValueChanged="memorySlider_LowerValueChanged"
                                    Margin="0,30"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Memory.Min}" HorizontalAlignment="Left" Height="25" VerticalAlignment="Bottom"/>
                                <TextBox x:Name="minMemoryTextBox" HorizontalAlignment="Left" Height="23" Margin="88,0,0,0" TextWrapping="Wrap"
                                     Text="{Binding Path=Environment.MinMemory}"
                                     IsEnabled="{Binding Path=Environment.AutoMemory, Converter={StaticResource BoolToOppositeBoolConverter}}"
                                     PreviewTextInput="textBox1_PreviewTextInput"
                                     InputMethod.IsInputMethodEnabled="False"
                                     MaxLength="6"
                                     Width="60" VerticalAlignment="Bottom"/>
                                <TextBox x:Name="maxMemoryTextBox" Height="23" TextWrapping="Wrap" 
                                     Text="{Binding Path=Environment.MaxMemory}" 
                                     IsEnabled="{Binding Path=Environment.AutoMemory, Converter={StaticResource BoolToOppositeBoolConverter}}"
                                     PreviewTextInput="textBox1_PreviewTextInput"
                                     InputMethod.IsInputMethodEnabled="False"
                                     MaxLength="6"
                                     HorizontalAlignment="Right" Width="60" VerticalAlignment="Bottom"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Memory.Max}" HorizontalAlignment="Right" Margin="0,0,61,0" VerticalAlignment="Bottom"/>
                            </Grid>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Window}" Margin="0,0,0,5">
                            <StackPanel Orientation="Horizontal">
                                <TextBox TextWrapping="Wrap" 
                                         PreviewTextInput="textBox1_PreviewTextInput"
                                         InputMethod.IsInputMethodEnabled="False"
                                         Text="{Binding Environment.WindowSize.Width}" 
                                         IsEnabled="{Binding Environment.WindowSize.FullScreen, Converter={StaticResource BoolToOppositeBoolConverter}}" Width="50"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Window.WH}"/>
                                <TextBox TextWrapping="Wrap"
                                         PreviewTextInput="textBox1_PreviewTextInput"
                                         InputMethod.IsInputMethodEnabled="False"
                                         Text="{Binding Environment.WindowSize.Height}"
                                         IsEnabled="{Binding Environment.WindowSize.FullScreen, Converter={StaticResource BoolToOppositeBoolConverter}}" Width="50"/>
                                <Label Content="(填写0为游戏默认)" Margin="0,0,20,0"/>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.Window.Full}"
                                          IsChecked="{Binding Environment.WindowSize.FullScreen}"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Pro}" Margin="0,0,0,5">
                            <StackPanel>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Pro.Agent}"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Environment.JavaAgent}"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Pro.GC}" Margin="0,5,0,0"/>
                                <RadioButton
                                             Content="{DynamicResource String.Settingwindow.Env.Pro.GC.G1}"
                                    IsChecked="{Binding Environment.GCType, Converter={StaticResource SettingCGRadioButtonConverter},ConverterParameter=0}"/>
                                <RadioButton Margin="0,5,0,0"
                                             Content="{DynamicResource String.Settingwindow.Env.Pro.GC.Serial}"
                                             IsChecked="{Binding Environment.GCType, Converter={StaticResource SettingCGRadioButtonConverter},ConverterParameter=1}"/>
                                <RadioButton Margin="0,5,0,0" 
                                             Content="{DynamicResource String.Settingwindow.Env.Pro.GC.Paralle}"
                                             IsChecked="{Binding Environment.GCType, Converter={StaticResource SettingCGRadioButtonConverter},ConverterParameter=2}"/>
                                <RadioButton Margin="0,5,0,0" 
                                             Content="{DynamicResource String.Settingwindow.Env.Pro.GC.CMS}"
                                             IsChecked="{Binding Environment.GCType, Converter={StaticResource SettingCGRadioButtonConverter},ConverterParameter=3}"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Pro.GC.Arg}" Margin="0,5,0,0"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Environment.GCArgument}"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Pro.JVMArg}" Margin="0,5,0,0"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Environment.AdvencedJvmArguments}"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Pro.GameArg}" Margin="0,5,0,0"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Environment.AdvencedGameArguments}"/>
                                <Label Content="{DynamicResource String.Settingwindow.Env.Pro.ArgNote}"/>

                            </StackPanel>
                        </Expander>

                        <Expander Header="{DynamicResource String.Settingwindow.Env.AutoFill}" Margin="0,0,0,5">
                            <StackPanel>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.AutoFill.Lib}" IsChecked="{Binding Environment.DownloadLostDepend}" Margin="0,0,0,5"/>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.AutoFill.Assets}" IsChecked="{Binding Environment.DownloadLostAssets}"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Habbit}" Margin="0,0,0,5">
                            <StackPanel>
                                <Label Content="{DynamicResource String.Settingwindow.User.Lauguage}" Margin="0,0,0,0"/>
                                <ComboBox HorizontalAlignment="Left" Margin="0,0,0,0" Width="120" Text="{Binding Lauguage}" Name="Lauguage"/>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.Habbit.Exit}" IsChecked="{Binding Environment.ExitAfterLaunch}" Margin="0,5,0,5"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Env.Launcher}" Margin="0,0,0,5">
                            <StackPanel>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.Autoupdata}" IsChecked="{Binding Launcher.CheckUpdate}" Margin="0,0,0,5"/>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.Launcher.DebugMode}" IsChecked="{Binding Launcher.Debug}" Margin="0,0,0,5"/>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Env.Disabledata}" IsChecked="{Binding Launcher.NoTracking}" Margin="0,0,0,5"/>
                            </StackPanel>
                        </Expander>
                        <TextBlock TextWrapping="Wrap" Text="{DynamicResource String.Settingwindow.Env.Note}"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{DynamicResource String.Settingwindow.Download}">
                <ScrollViewer>
                    <StackPanel x:Name="downloadGrid" Margin="10,0">
                        <Expander Header="{DynamicResource String.Settingwindow.Download.Source}" Margin="0,0,0,5">
                            <StackPanel>
                                <RadioButton Content="{DynamicResource String.Settingwindow.Download.Source.Mojang}"
                                             IsChecked="{Binding Download.DownloadSource,
                                    Converter={StaticResource SettingDownloadRadioButtonConverter},ConverterParameter=0}" Margin="0,0,0,5"/>
                                <RadioButton Content="{DynamicResource String.Settingwindow.Download.Source.BMCLAPI}"
                                             IsChecked="{Binding Download.DownloadSource,
                                    Converter={StaticResource SettingDownloadRadioButtonConverter},ConverterParameter=1}" Margin="0,0,0,5"/>
                                <Label Content="{DynamicResource String.Settingwindow.Download.Source.Note}"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Download.Thread}" Margin="0,0,0,5">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{DynamicResource String.Settingwindow.Download.Thread.Num}"/>
                                <TextBox Text="{Binding Download.DownloadThreadsSize}"
                                         PreviewTextInput="textBox1_PreviewTextInput"
                                         InputMethod.IsInputMethodEnabled="False"
                                         Width="60" HorizontalAlignment="Left" MaxLength="2"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Download.Proxy}" Margin="0,0,0,5">
                            <StackPanel>
                                <Label Content="{DynamicResource String.Settingwindow.Download.Proxy.Address}"/>
                                <TextBox Text="{Binding Download.DownloadProxyAddress}" Margin="0,0,0,5"/>
                                <Label Content="{DynamicResource String.Settingwindow.Download.Proxy.Port}"/>
                                <TextBox 
                                    PreviewTextInput="textBox1_PreviewTextInput"
                                    InputMethod.IsInputMethodEnabled="False"
                                    Text="{Binding Download.DownloadProxyPort}" Width="60" HorizontalAlignment="Left" 
                                    Margin="0,0,0,5" MaxLength="6"/>
                                <Label Content="{DynamicResource String.Settingwindow.Download.Proxy.User}"/>
                                <TextBox Text="{Binding Download.ProxyUserName}" Margin="0,0,0,5"/>
                                <Label Content="{DynamicResource String.Settingwindow.Download.Proxy.Password}"/>
                                <TextBox Text="{Binding Download.ProxyUserPassword}" Margin="0,0,0,5"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.Download.Advance}" Margin="0,0,0,5">
                            <StackPanel>
                                <CheckBox Content="{DynamicResource String.Settingwindow.Download.Check}" IsChecked="{Binding Download.CheckDownloadFileHash}"/>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{DynamicResource String.Settingwindow.Version}">
                <Grid>
                    <Label x:Name="label6" Content="{DynamicResource String.Settingwindow.Version.ChooseText}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,1,0,0"/>
                    <ComboBox x:Name="VersionsComboBox" Margin="148,0,155,0" VerticalAlignment="Top" DisplayMemberPath="ID" SelectionChanged="VersionsComboBox_SelectionChanged"/>
                    <StackPanel>
                        <Expander x:Name="groupBox7" Header="{DynamicResource String.Settingwindow.Version.Options}" Margin="10,31,10,0">
                            <Grid Height="238">
                                <DataGrid x:Name="versionOptionsGrid" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" Margin="0,0,0,20" CellEditEnding="VersionOptionsGrid_CellEditEnding">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="{DynamicResource String.Settingwindow.Version.Options.T}" Binding="{Binding Key}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="{DynamicResource String.Settingwindow.Version.Options.V}" Binding="{Binding Value}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock TextWrapping="Wrap" Text="{DynamicResource String.Settingwindow.Version.Options.Note}" VerticalAlignment="Bottom"/>
                            </Grid>
                        </Expander>
                    </StackPanel>
                    <Button x:Name="refreshVersionsButton" Content="{DynamicResource String.Settingwindow.Version.Refresh}"
                            VerticalAlignment="Top" HorizontalAlignment="Right" Width="140" Click="refreshVersionsButton_Click" Margin="0,-1,10,0"/>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource String.Settingwindow.User}">
                <ScrollViewer>
                    <StackPanel x:Name="userGrid" Margin="10,0">
                        <Expander x:Name="addAuthModuleExpander" Header="{DynamicResource String.Settingwindow.User.Set}" Margin="0,0,0,5">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{DynamicResource String.Settingwindow.User.Chose}"/>
                                    <ComboBox x:Name="authModuleCombobox" Width="200" Margin="0,0,5,0"
                                    DisplayMemberPath="Value.Name" SelectionChanged="AuthModuleCombobox_SelectionChanged"
                                    SelectedValuePath="Key" ItemsSource="{Binding User.AuthenticationDic}"/>
                                    <Button x:Name="clearAuthselectButton" Width="100" Margin="0,0,5,0" Content="{DynamicResource String.Settingwindow.User.Add}" Click="ClearAuthselectButton_Click"/>
                                </StackPanel>
                                <userControl:AuthModuleControl x:Name="authmoduleControl"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="{DynamicResource String.Settingwindow.User.Setting}" Margin="0,0,0,5">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{DynamicResource String.Settingwindow.User.Setting.Chose}"/>
                                    <ComboBox x:Name="userComboBox" Width="250"
                                              SelectedValuePath="Key" ItemsSource="{Binding User.UserDatabase}"
                                              DisplayMemberPath="Value.UserName"/>
                                    <Label Content="*在主界面输入要新建的用户名并启动即可新建用户"/>
                                </StackPanel>
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="{DynamicResource String.Settingwindow.User.Info.UnRemember}" Margin="0,5,0,5" Click="forgetUserButton_Click"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="{DynamicResource String.Settingwindow.User.Info.Clear}" Margin="0,0,0,5" Click="clearUserButton_Click"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="{DynamicResource String.Settingwindow.User.Info.Del}" Click="delUserButton_Click" Background="IndianRed" Foreground="White"/>
                            </StackPanel>
                        </Expander>
                        <Expander Header="全局用户设置">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <Label Content="全局使用验证模型："/>
                                    <ComboBox x:Name="lockauthCombobox" Width="200" Margin="0,0,5,0"
                                    DisplayMemberPath="Value.Name" ItemsSource="{Binding User.AuthenticationDic}"              
                                    SelectedValuePath="Key" SelectedValue="{Binding User.LockAuthName}"/>
                                    <Button Width="100" Content="清除全局验证选择" Click="clearAllauthButton_Click"/>
                                </StackPanel>
                                <CheckBox Margin="0,0,0,10" Content="统一通行证服务器依赖（仅在全局使用统一通行证验证模型，且统一通行证后台正确设置后生效）" IsChecked="{Binding User.Nide8ServerDependence}"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="删除全部验证模型" Background="IndianRed" Foreground="White" Margin="0,0,0,5" Click="delAllAuthnodeButton_Click"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="删除全部用户" Background="IndianRed" Foreground="White" Click="delAllUserButton_Click"/>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="自定义">
                <ScrollViewer>
                    <StackPanel x:Name="customGrid" Margin="10,0,10,0">
                        <Expander Header="启动器主题设置" Margin="0,0,0,5">
                            <StackPanel>
                                <Label Content="启动器主题颜色:"/>
                                <ComboBox x:Name="AccentColorComboBox" DisplayMemberPath="Name" SelectionChanged="AccentColorComboBox_SelectionChanged"
                                          Text="{Binding Customize.AccentColor}" HorizontalAlignment="Left" Width="200"/>
                                <Label Content="启动器主题:"/>
                                <ComboBox x:Name="appThmeComboBox" SelectionChanged="appThmeComboBox_SelectionChanged" DisplayMemberPath="Name"
                                          Text="{Binding Customize.AppThme}" HorizontalAlignment="Left" Width="200"/>
                            </StackPanel>
                        </Expander>

                        <Expander Header="启动器背景元素设置" Margin="0,0,0,5">
                            <StackPanel>
                                <!--Color_yr Add Start-->
                                <CheckBox x:Name="checkBox3" Content="开启自定义背景视频" IsChecked="{Binding Customize.CustomBackGroundViode}" Margin="0,0,442,2" Click="CheckBox3_Checked"/>
                                <CheckBox x:Name="checkBox2" Content="开启自定义背景音乐" IsChecked="{Binding Customize.CustomBackGroundMusic}" Margin="0,0,442,2" Click="CheckBox2_Checked"/>
                                <CheckBox x:Name="checkBox1" Content="开启自定义背景图片" IsChecked="{Binding Customize.CustomBackGroundPicture}" Margin="0,0,442,2" Click="CheckBox1_Checked" Checked="CheckBox1_Checked"/>
                                <CheckBox x:Name="checkBox4" Content="开启自定义背景图片循环播放" IsChecked="{Binding Customize.CustomBackGroundCyclic}" Margin="0,0,442,2" IsEnabled="False"/>
                                <Label x:Name="set" Content="循环背景图片时间，单位毫秒" IsEnabled="False"/>
                                <TextBox x:Name="Text" HorizontalAlignment="Left" Height="3" Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding Customize.CustomBackGroundCyclic_time}" Width="132" TextChanged="TextBox_TextChanged" IsEnabled="False"/>
                                <Label Content="把文件放进config文件夹即可，支持jpg和png，自定义视频启用后自定义图片和音乐不可用。"/>
                                <!--Color_yr Add Stop-->
                            </StackPanel>
                        </Expander>

                        <Expander Header="自定义内容设置" Margin="0,0,0,5">
                            <StackPanel>
                                <Label Content="启动器窗口标题:"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Customize.LauncherTitle}"/>
                                <Label Content="游戏窗口标题（需保持启动器在启动后不被关闭的状态）:" Margin="0,10,0,0"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Customize.GameWindowTitle}"/>
                                <Label Content="游戏版本信息（游戏主界面左下角版本信息，高版本才支持）:" Margin="0,10,0,0"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Customize.VersionInfo}"/>
                            </StackPanel>
                        </Expander>

                        <Expander Header="Minecraft服务器设置" Margin="0,0,0,5">
                            <StackPanel>
                                <CheckBox Content="在主界面显示服务器信息" IsChecked="{Binding Server.ShowServerInfo}" Margin="0,0,0,5"/>
                                <CheckBox Content="启动后自动进入服务器" IsChecked="{Binding Server.LaunchToServer}" Margin="0,0,0,5"/>
                                <Label Content="服务器名称:"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Server.ServerName}" HorizontalAlignment="Left" Width="300"/>
                                <Label Content="服务器地址:"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Server.Address}" HorizontalAlignment="Left" Width="300"/>
                                <Label Content="服务器端口(SRV填写0):"/>
                                <TextBox Text="{Binding Server.Port}"
                                     PreviewTextInput="textBox1_PreviewTextInput"
                                     InputMethod.IsInputMethodEnabled="False"
                                     MaxLength="6" HorizontalAlignment="Left" Width="80"
                                     />
                            </StackPanel>
                        </Expander>
                        <Expander Header="资源更新检查" Margin="0,0,0,5">
                            <StackPanel>
                                <CheckBox Content="启用资源检查" IsChecked="{Binding Server.Mods_Check.Enable}" Margin="0,0,0,5"/>
                                <Label Content="服务器地址:"/>
                                <TextBox TextWrapping="NoWrap" Text="{Binding Server.Mods_Check.Address}" HorizontalAlignment="Left" Width="300"/>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>

            </TabItem>
            <TabItem Header="关于">
                <StackPanel>
                    <TextBlock Margin="10,0" FontSize="18">
                        启动器原来的仓库
                        <Hyperlink Click="Hyperlink_Click" NavigateUri="https://github.com/Nsiso/NsisoLauncher">
                            https://github.com/Nsiso/NsisoLauncher
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Margin="10,0" FontSize="18"><Run Text="启动器Fork后的仓库 "/><Hyperlink Click="Hyperlink_Click" NavigateUri="https://github.com/Coloryr/NsisoLauncher"><Run Text="https://github.com/Coloryr/NsisoLauncher"/></Hyperlink></TextBlock>
                    <TextBlock Margin="10,0" FontSize="18">
                        启动器声明
                        <Hyperlink Click="Hyperlink_Click" NavigateUri="https://github.com/Nsiso/NsisoLauncher/blob/master/README.md">
                            https://github.com/Nsiso/NsisoLauncher/blob/master/README.md
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Margin="10,0" FontSize="18">
                        启动器文档
                        <Hyperlink Click="Hyperlink_Click" NavigateUri="https://github.com/Nsiso/NsisoLauncher/wiki">
                            https://github.com/Nsiso/NsisoLauncher/wiki
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Margin="10,0" FontSize="24">
                        该启动器版权由Nsiso所有
                    </TextBlock>
                </StackPanel>
            </TabItem>
            <TextBox Height="35" TextWrapping="Wrap" Text="TextBox" Width="70"/>

        </TabControl>
        <Button x:Name="saveButton" Content="{DynamicResource String.Base.Apply}"
                Margin="0,0,10,10" Style="{StaticResource AccentedSquareButtonStyle}" Height="35" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="120" Click="saveButton_Click"/>
        <Button x:Name="cancelButton" Content="{DynamicResource String.Base.Cancel}" 
                Margin="0,0,135,10" Style="{DynamicResource SquareButtonStyle}" Height="35" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="120" Click="cancelButton_Click"/>
        <StackPanel Orientation="Horizontal" Margin="10,0,0,10" VerticalAlignment="Bottom">
            <TextBlock Opacity="0.5" TextWrapping="Wrap" Text="NsisoLauncher" Height="15" Margin="0,0,10,0"/>
            <TextBlock x:Name="versionTextBlock" Opacity="0.5" TextWrapping="Wrap" Text="0.0.0.0" Height="15"/>
        </StackPanel>
    </Grid>
</Controls:MetroWindow>
